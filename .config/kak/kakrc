# Config inspirations:
# https://github.com/andreyorst/dotfiles/tree/master/.config/kak
# Word mode
# source: https://discuss.kakoune.com/t/avoiding-modifier-chording/107/4


#= Map as soon as possible, in case of configuration errors
map global user ,     ': edit "%val{config}/kakrc"<ret>'   -docstring 'Edit config'
map global user <a-,> ': source "%val{config}/kakrc"<ret>' -docstring 'Source config'
map global user s     ': write<ret>'                       -docstring 'Save file'
map global user /     ': comment-line<ret>'                -docstring 'comment line'
map global user <a-/> ': comment-block<ret>'               -docstring 'comment block'


#= Basic commands
require-module kak
add-highlighter -override shared/kakrc/code/if_else regex \b(if|when|unless)\b 0:keyword

define-command true   -override -params 2 %{ eval %arg{1} }
define-command false  -override -params 2 %{ eval %arg{2} }
define-command if     -override -params 3 %{ eval -verbatim %arg{1} %arg{2} %arg{3} }
define-command when   -override -params 2 %{ eval -verbatim %arg{1} %arg{2} nop }
define-command unless -override -params 2 %{ eval -verbatim %arg{1} nop %arg{2} }


#= Options
# colorscheme base16

set-option global ui_options 'terminal_assistant=off'
# set-option global extra_word_chars '_' '-'
add-highlighter -override global/wrap wrap -word -indent -marker 'Â¬ '
set global autocomplete ''

when %sh{ [ -n "$(command -v rg)" ] && echo true || echo false } %{
    set-option global grepcmd 'rg -L --hidden --with-filename --column'
}


#= Languages
hook global BufSetOption filetype=(ruby|yaml) %{
    set-option buffer indentwidth 2
}


#= Commands
define-command -override -docstring 'Copy buffer position' \
copy-position %{
    eval %sh{
        echo "set-register dquote \"$kak_selection:\\n    $(realpath --relative-to=$PWD $kak_buffile):$kak_cursor_line:$kak_cursor_column\""
    }
}
# map global user x ': copy-position<ret>' -docstring 'Copy position'


#= Plugins
# Bootstrap the plugin manager
evaluate-commands %sh{
  # We're assuming the default bundle_path here...
  plugins="$kak_config/bundle"
  mkdir -p "$plugins"
  [ ! -e "$plugins/kak-bundle" ] && \
    git clone -q https://codeberg.org/jdugan6240/kak-bundle "$plugins/kak-bundle"
  printf "%s\n" "source '$plugins/kak-bundle/rc/kak-bundle.kak'"
}
bundle-noload kak-bundle https://codeberg.org/jdugan6240/kak-bundle

# bundle kakoune-buffers https://github.com/Delapouite/kakoune-buffers %{
#     map global user b ': enter-buffers-mode<ret>' -docstring 'buffers'
#     map global user B ': enter-user-mode -lock buffers<ret>' -docstring 'buffers (lock)'
# }

# bundle popup.kak https://github.com/enricozb/popup.kak %{
#     map global user p "<esc>: popup --title open --kak-script %{edit %opt{popup_output}} -- fzf<ret>" -docstring 'edit file'
# }
# bundle-install-hook popup.kak %{
#   cargo install kak-popup
# }

bundle kakoune-phantom-selection https://github.com/occivink/kakoune-phantom-selection %{
    map global user z       "<esc>: phantom-selection-add-selection<ret>"                       -docstring 'phantom add'
    map global user Z       "<esc>: phantom-selection-select-all; phantom-selection-clear<ret>" -docstring 'phantom clear'
    map global normal <a-0> "<esc>: phantom-selection-iterate-next<ret>"                        -docstring 'phantom next'
    map global normal <a-9> "<esc>: phantom-selection-iterate-prev<ret>"                        -docstring 'phantom prev'
}
